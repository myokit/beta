name: Build wheels and test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - '**'
  release:
    types:
      - published
jobs:

  build-wheels:
    name: Test ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    if: (github.repository == 'myokit/beta') && !github.event.pull_request.draft

    strategy:
      fail-fast: false  # Continue even if other wheels fail
      matrix:
        include:
          - os: ubuntu-latest
            build: cp311-manylinux_x86_64
            manylinux: manylinux2014
          #- os: ubuntu-latest
          #  build: cp310-manylinux_x86_64
          #  manylinux: manylinux2014
          #- os: ubuntu-latest
          #  build: cp39-manylinux_x86_64
          #  manylinux: manylinux2014
          #- os: ubuntu-latest
          #  build: cp38-manylinux_x86_64
          #  manylinux: manylinux2014

          - os: macos-latest
            build: cp311-macosx_x86_64
          #- os: macos-latest
          #  build: cp310-macosx_x86_64
          #- os: macos-latest
          #  build: cp39-macosx_x86_64
          #- os: macos-latest
          #  build: cp38-macosx_x86_64

          - os: windows-latest
            build: cp311-win_amd64
          #- os: windows-latest
          #  build: cp310-win_amd64
          #- os: windows-latest
          #  build: cp39-win_amd64
          #- os: windows-2019        # 3.8 needs windows-2019
          #  build: cp38-win_amd64

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Remove windows binaries
        if: (!startsWith(${{ matrix.os }}, 'windows'))
        run: |
            rm myokit_beta/_bin/sundials-win-vs -rf


      - name: Set up Python for cibuildwheel
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build wheels and test
        uses: pypa/cibuildwheel@v2.13.1
        env:
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_BUILD_VERBOSITY: 1
          #CIBW_TEST_COMMAND: python {package}/tests_in_the_package
          CIBW_TEST_COMMAND: python {project}/test/test.py
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux }}
          #CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux }}
          #CIBW_BEFORE_ALL_WINDOWS
          CIBW_BEFORE_ALL_MACOS: sh .github/workflows/install-macos-dependencies.sh
          CIBW_BEFORE_ALL_LINUX: sh .github/workflows/install-centos-dependencies.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build . --sdist

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload-pypi:
    name: Upload to TEST PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment:
      name: pypi
      url: https://test.pypi.org/p/myokit-beta
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.test_pypi_token }}
          repository-url: https://test.pypi.org/legacy/

